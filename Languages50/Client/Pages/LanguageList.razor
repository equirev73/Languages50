@page "/languagelist"

@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<h2>LanguagesList</h2>
<p>
    <a href="addlanguage">Create a new Language</a>
</p>

@if (languages == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>WebSite</th>
                <th>Extension</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var lang in languages)
            {
                <tr>
                    <td>@lang.Name</td>
                    <td>@lang.WebSite</td>
                    <td>@lang.Extension</td>
                    <td><a href="editlanguage/@lang.Id">Edit</a></td>
                    <td><a href="deletelanguage/@lang.Id">Delete</a></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<ProgrammingLanguage> languages;
    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/languagehub"))
            .Build();

        hubConnection.On("ReceiveMessage", () =>
        {
            CallAllLanguages();
        //StateHasChanged();
    });

        await hubConnection.StartAsync();
        await GetAllLanguages();
    }

    private void CallAllLanguages()
    {
        Task.Run(async () => await GetAllLanguages());
    }

    protected async Task GetAllLanguages()
    {
        languages = await HttpClient.GetFromJsonAsync<List<ProgrammingLanguage>>("api/ProgrammingLanguages");
        StateHasChanged();
    }

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }
}
